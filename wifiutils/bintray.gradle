apply plugin: 'com.jfrog.bintray'

version = rootProject.ext.publishVersionName

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    /*   task javadoc(type: Javadoc) {
           source = android.sourceSets.main.java.srcDirs
           classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
       }*/

} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

/*//disable Javadoc generation cuz it won't work -.-
tasks.withType(Javadoc).all {
    enabled = false
}*/

/*task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}*/

artifacts {
    //archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = rootProject.ext.bintrayRepo
        name = rootProject.ext.bintrayName
        desc = rootProject.ext.libraryDescription
        websiteUrl = rootProject.ext.siteUrl
        issueTrackerUrl = rootProject.ext.siteUrl + '/issues'
        vcsUrl = rootProject.ext.gitUrl
        licenses = rootProject.ext.allLicenses
        githubRepo = rootProject.ext.githubRepository //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        dryRun = false
        publish = true
        publicDownloadNumbers = true
        version {
            desc = rootProject.ext.libraryDescription
            name = rootProject.ext.publishVersionName
            desc = rootProject.ext.currentVersionDesc
            released = new Date()
            vcsTag = rootProject.ext.publishVersionName
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
